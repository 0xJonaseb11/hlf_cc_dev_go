// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orderer/blockattestation.proto

package orderer

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	common "github.com/hyperledger/fabric-protos-go/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BlockAttestation struct {
	Header               *common.BlockHeader   `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Metadata             *common.BlockMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *BlockAttestation) Reset()         { *m = BlockAttestation{} }
func (m *BlockAttestation) String() string { return proto.CompactTextString(m) }
func (*BlockAttestation) ProtoMessage()    {}
func (*BlockAttestation) Descriptor() ([]byte, []int) {
	return fileDescriptor_24d99d0b3bd658b0, []int{0}
}

func (m *BlockAttestation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockAttestation.Unmarshal(m, b)
}
func (m *BlockAttestation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockAttestation.Marshal(b, m, deterministic)
}
func (m *BlockAttestation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockAttestation.Merge(m, src)
}
func (m *BlockAttestation) XXX_Size() int {
	return xxx_messageInfo_BlockAttestation.Size(m)
}
func (m *BlockAttestation) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockAttestation.DiscardUnknown(m)
}

var xxx_messageInfo_BlockAttestation proto.InternalMessageInfo

func (m *BlockAttestation) GetHeader() *common.BlockHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *BlockAttestation) GetMetadata() *common.BlockMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type BlockAttestationResponse struct {
	// Types that are valid to be assigned to Type:
	//
	//	*BlockAttestationResponse_Status
	//	*BlockAttestationResponse_BlockAttestation
	Type                 isBlockAttestationResponse_Type `protobuf_oneof:"Type"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *BlockAttestationResponse) Reset()         { *m = BlockAttestationResponse{} }
func (m *BlockAttestationResponse) String() string { return proto.CompactTextString(m) }
func (*BlockAttestationResponse) ProtoMessage()    {}
func (*BlockAttestationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_24d99d0b3bd658b0, []int{1}
}

func (m *BlockAttestationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockAttestationResponse.Unmarshal(m, b)
}
func (m *BlockAttestationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockAttestationResponse.Marshal(b, m, deterministic)
}
func (m *BlockAttestationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockAttestationResponse.Merge(m, src)
}
func (m *BlockAttestationResponse) XXX_Size() int {
	return xxx_messageInfo_BlockAttestationResponse.Size(m)
}
func (m *BlockAttestationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockAttestationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlockAttestationResponse proto.InternalMessageInfo

type isBlockAttestationResponse_Type interface {
	isBlockAttestationResponse_Type()
}

type BlockAttestationResponse_Status struct {
	Status common.Status `protobuf:"varint,1,opt,name=status,proto3,enum=common.Status,oneof"`
}

type BlockAttestationResponse_BlockAttestation struct {
	BlockAttestation *BlockAttestation `protobuf:"bytes,2,opt,name=block_attestation,json=blockAttestation,proto3,oneof"`
}

func (*BlockAttestationResponse_Status) isBlockAttestationResponse_Type() {}

func (*BlockAttestationResponse_BlockAttestation) isBlockAttestationResponse_Type() {}

func (m *BlockAttestationResponse) GetType() isBlockAttestationResponse_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *BlockAttestationResponse) GetStatus() common.Status {
	if x, ok := m.GetType().(*BlockAttestationResponse_Status); ok {
		return x.Status
	}
	return common.Status_UNKNOWN
}

func (m *BlockAttestationResponse) GetBlockAttestation() *BlockAttestation {
	if x, ok := m.GetType().(*BlockAttestationResponse_BlockAttestation); ok {
		return x.BlockAttestation
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*BlockAttestationResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*BlockAttestationResponse_Status)(nil),
		(*BlockAttestationResponse_BlockAttestation)(nil),
	}
}

func init() {
	proto.RegisterType((*BlockAttestation)(nil), "orderer.BlockAttestation")
	proto.RegisterType((*BlockAttestationResponse)(nil), "orderer.BlockAttestationResponse")
}

func init() { proto.RegisterFile("orderer/blockattestation.proto", fileDescriptor_24d99d0b3bd658b0) }

var fileDescriptor_24d99d0b3bd658b0 = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xd1, 0x4a, 0xbc, 0x40,
	0x18, 0xc5, 0xd7, 0x3f, 0x7f, 0x2c, 0x26, 0x58, 0xdc, 0x59, 0x02, 0xdb, 0x8b, 0xa8, 0x85, 0x60,
	0x21, 0x76, 0xa6, 0xec, 0x09, 0x12, 0x02, 0x09, 0xba, 0xb1, 0x2e, 0xa2, 0x9b, 0x65, 0xd4, 0x2f,
	0x95, 0xd4, 0x4f, 0x66, 0x66, 0x83, 0x7d, 0x91, 0x9e, 0x37, 0x1c, 0xc7, 0xda, 0xa4, 0xae, 0x84,
	0x73, 0x7e, 0x67, 0xce, 0x77, 0x90, 0x9c, 0xa2, 0xcc, 0x40, 0x82, 0xe4, 0x49, 0x85, 0xe9, 0x9b,
	0xd0, 0x1a, 0x94, 0x16, 0xba, 0xc4, 0x86, 0xb5, 0x12, 0x35, 0xd2, 0x03, 0xeb, 0x2f, 0xe6, 0x29,
	0xd6, 0x35, 0x36, 0xbc, 0xff, 0xf4, 0xee, 0x52, 0x12, 0x2f, 0xec, 0x72, 0xb7, 0xdf, 0x39, 0x7a,
	0x49, 0xdc, 0x02, 0x44, 0x06, 0xd2, 0x77, 0xce, 0x9c, 0xd5, 0x51, 0x30, 0x67, 0x36, 0x62, 0xc8,
	0xc8, 0x58, 0xb1, 0x45, 0xe8, 0x35, 0x39, 0xac, 0x41, 0x8b, 0x4c, 0x68, 0xe1, 0xff, 0x33, 0xf8,
	0xf1, 0x0f, 0xfc, 0xc1, 0x9a, 0xf1, 0x17, 0xb6, 0xfc, 0x70, 0x88, 0x3f, 0x2e, 0x8d, 0x41, 0xb5,
	0xd8, 0x28, 0xa0, 0x2b, 0xe2, 0x76, 0xd2, 0x56, 0x99, 0xf2, 0x69, 0x30, 0x1d, 0x5e, 0x7b, 0x34,
	0x6a, 0x34, 0x89, 0xad, 0x4f, 0x23, 0x32, 0x33, 0x93, 0x37, 0x7b, 0x9b, 0xed, 0x09, 0x27, 0xcc,
	0x8e, 0x66, 0xe3, 0x9e, 0x68, 0x12, 0x7b, 0xc9, 0x48, 0x0b, 0x5d, 0xf2, 0xff, 0x69, 0xd7, 0x42,
	0xb0, 0x21, 0xb3, 0x31, 0xaf, 0xe8, 0xfd, 0x6f, 0xa2, 0x37, 0x5c, 0x75, 0xd7, 0xbc, 0x43, 0x85,
	0x2d, 0x2c, 0xce, 0xff, 0xac, 0x1c, 0xa6, 0x5d, 0x39, 0xe1, 0x33, 0xb9, 0x40, 0x99, 0xb3, 0x62,
	0xd7, 0x82, 0xac, 0x20, 0xcb, 0x41, 0xb2, 0x57, 0x91, 0xc8, 0x32, 0xed, 0xff, 0x86, 0x1a, 0xde,
	0x78, 0xe1, 0x79, 0xa9, 0x8b, 0x6d, 0xd2, 0xb5, 0xf0, 0x3d, 0x9a, 0xf7, 0xf4, 0xba, 0xa7, 0xd7,
	0x39, 0x72, 0x1b, 0x48, 0x5c, 0x23, 0xdd, 0x7c, 0x06, 0x00, 0x00, 0xff, 0xff, 0xe2, 0x54, 0x77,
	0xb8, 0x0e, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BlockAttestationsClient is the client API for BlockAttestations service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlockAttestationsClient interface {
	// BlockAttestations receives an Envelope of type DELIVER_SEEK_INFO , then sends back a stream of BlockAttestations.
	BlockAttestations(ctx context.Context, in *common.Envelope, opts ...grpc.CallOption) (BlockAttestations_BlockAttestationsClient, error)
}

type blockAttestationsClient struct {
	cc *grpc.ClientConn
}

func NewBlockAttestationsClient(cc *grpc.ClientConn) BlockAttestationsClient {
	return &blockAttestationsClient{cc}
}

func (c *blockAttestationsClient) BlockAttestations(ctx context.Context, in *common.Envelope, opts ...grpc.CallOption) (BlockAttestations_BlockAttestationsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BlockAttestations_serviceDesc.Streams[0], "/orderer.BlockAttestations/BlockAttestations", opts...)
	if err != nil {
		return nil, err
	}
	x := &blockAttestationsBlockAttestationsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BlockAttestations_BlockAttestationsClient interface {
	Recv() (*BlockAttestationResponse, error)
	grpc.ClientStream
}

type blockAttestationsBlockAttestationsClient struct {
	grpc.ClientStream
}

func (x *blockAttestationsBlockAttestationsClient) Recv() (*BlockAttestationResponse, error) {
	m := new(BlockAttestationResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BlockAttestationsServer is the server API for BlockAttestations service.
type BlockAttestationsServer interface {
	// BlockAttestations receives an Envelope of type DELIVER_SEEK_INFO , then sends back a stream of BlockAttestations.
	BlockAttestations(*common.Envelope, BlockAttestations_BlockAttestationsServer) error
}

// UnimplementedBlockAttestationsServer can be embedded to have forward compatible implementations.
type UnimplementedBlockAttestationsServer struct {
}

func (*UnimplementedBlockAttestationsServer) BlockAttestations(req *common.Envelope, srv BlockAttestations_BlockAttestationsServer) error {
	return status.Errorf(codes.Unimplemented, "method BlockAttestations not implemented")
}

func RegisterBlockAttestationsServer(s *grpc.Server, srv BlockAttestationsServer) {
	s.RegisterService(&_BlockAttestations_serviceDesc, srv)
}

func _BlockAttestations_BlockAttestations_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(common.Envelope)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BlockAttestationsServer).BlockAttestations(m, &blockAttestationsBlockAttestationsServer{stream})
}

type BlockAttestations_BlockAttestationsServer interface {
	Send(*BlockAttestationResponse) error
	grpc.ServerStream
}

type blockAttestationsBlockAttestationsServer struct {
	grpc.ServerStream
}

func (x *blockAttestationsBlockAttestationsServer) Send(m *BlockAttestationResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _BlockAttestations_serviceDesc = grpc.ServiceDesc{
	ServiceName: "orderer.BlockAttestations",
	HandlerType: (*BlockAttestationsServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "BlockAttestations",
			Handler:       _BlockAttestations_BlockAttestations_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "orderer/blockattestation.proto",
}
